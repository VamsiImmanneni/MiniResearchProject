import numpy as np

def inverse_2x2(a,b,c,d):
    determinant = a*d - b*c
    if determinant == 0:
        raise ValueError("Cannot compute inverse, determinant is 0.")
    return [(1/determinant)*d, (-1/determinant)*b, (-1/determinant)*c, (1/determinant)*a]

def vectorized_inverse_2x2(a, b, c, d):
    determinant = np.array(a)*np.array(d) - np.array(b)*np.array(c)
    if np.any(determinant == 0):
        raise ValueError("Cannot compute inverse, determinant is 0.")
    inverse = np.array([(1/determinant